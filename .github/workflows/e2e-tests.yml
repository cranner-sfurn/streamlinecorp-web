name: E2E Test on PR

permissions:
  pull-requests: write

on:
  pull_request:
    branches:
      - "**"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm and Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Comment on PR - E2E tests starting
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const marker = '<!-- e2e-status -->';
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${marker}\nðŸš€ E2E tests are starting...`
            })

      - name: Run E2E tests and capture output
        id: run_e2e
        run: |
          set -o pipefail
          npm run test:e2e 2>&1 | tee e2e-output.log

      - name: Edit PR comment - E2E test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const marker = '<!-- e2e-status -->';
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const botComment = comments.reverse().find(c => c.body && c.body.includes(marker));
            if (!botComment) throw new Error('No E2E status comment found to update.');
            const fs = require('fs');
            let output = fs.readFileSync('e2e-output.log', 'utf8');
            if (output.length > 65000) {
              output = output.slice(0, 65000) + '\n... (truncated)';
            }
            await github.rest.issues.updateComment({
              comment_id: botComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${marker}\nâœ… E2E test results:\n\n${output}`
            });
